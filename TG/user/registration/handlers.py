from aiogram import F, types, Router, Dispatcher
from aiogram.filters import Command, StateFilter
from aiogram.fsm.state import StatesGroup, State
from aiogram.types import FSInputFile, InputMediaPhoto
from aiogram.fsm.context import FSMContext

from TG.filters import user_is_not_registered




class UserRegistration(StatesGroup):
    Start_registration = State()
    Get_name = State()
    Get_phone_number = State()
    Get_group = State()
    Get_expirense = State()


router = Router()
router.message.filter(user_is_not_registered())
router.callback_query.filter(user_is_not_registered())



@router.message(StateFilter(None))
async def start_registration(message:types.Message, state:FSMContext):
    await message.answer("–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!‚úã\n\
                          –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–≥–æ –±–æ—Ç–∞ —Å–Ω–∞—á–∞–ª–∞ \n\
                         –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–π—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é‚úíÔ∏è")
    await message.answer("–£–∫–∞–∂–∏—Ç–µ, –∫–∞–∫ –∫ –≤–∞–º –º–æ–∂–Ω–æ –æ–±—Ä–∞—â–∞—Ç—å—Å—è:")
    await state.set_state(UserRegistration.Get_name)
    
@router.message(UserRegistration.Get_name)
async def get_name(message:types.Message, state:FSMContext):
    await state.update_data(name = message.text)
    await state.set_state(UserRegistration.Get_phone_number)

    name = data["name"]

    data = await state.get_data()
    await message.answer(f"–û—Ç–ª–∏—á–Ω–æ, {name}.\n\
                            –¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è —Å–≤—è–∑–∏.üìû")
    
# –î–æ–±–∞–≤–∏—Ç—å –≤—ã–±–æ—Ä –∏–∑ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –≥—Ä—É–ø–ø!!!!!!!!!!!!!!
@router.message(UserRegistration.Get_phone_number)
async def get_phone_number(message:types.Message, state:FSMContext):
    await state.update_data(phone_number = message.text)
    await state.set_state(UserRegistration.Get_group)
    await message.answer("–ù–∞–ø–∏—à–∏—Ç–µ, –∫–µ–º –±—ã –≤—ã—Ö–æ—Ç–µ–ª–∏ —Ä–∞–±–æ—Ç–∞—Ç—å.\n –ò–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ")

#–î–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É - –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å
@router.message(UserRegistration.Get_group)
async def get_group(message:types.Message, state:FSMContext):
    await state.update_data(group = message.text)
    await state.set_state(UserRegistration.Get_expirense)
    await message.answer("–ö—Ä–∞—Ç–∫–æ –æ–ø–∏—à–∏—Ç–µ, –∫–∞–∫–æ–π –æ–ø—ã—Ç —Ä–∞–±–æ—Ç—ã –ø–æ —ç—Ç–æ–π —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ —É –≤–∞—Å –∏–º–µ–µ—Ç—Å—è:")

@router.message(UserRegistration.Get_expirense)
async def get_expirence(message:types.Message, state:FSMContext):
    await state.update_data(expirence = message.text)
    await message.answer("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ‚úÖ")
